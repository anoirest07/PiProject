@using EventManage.Models
@model EventManage.Models.UserViewModel

@{
                /**/

                ViewBag.Title = "Edit";
                Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="profile-content section">
        <div class="container">
            <div class="row">
                <div class="profile-picture">
                    <div class="fileinput fileinput-new" data-provides="fileinput">
                        <div class="fileinput-new ">
                            @*recuperer l'image*@
                            @{string path = "~/Content/Upload/" + @Html.DisplayFor(model => model.Image);}
                            @*enlever label for pour afficher seulement l'image*@
                            <img src="@Url.Content(path)" width="120" height="120" />
                        </div>
                        <div class="fileinput-preview fileinput-exists img-no-padding"></div>
                        <div class="fileinput-new img-no-padding">
                            
                                @Html.TextBox("Image", null, new { type = "file" })
                                @*Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })*@
                                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                            
                           
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 ml-auto mr-auto">
                    <form class="settings-form">
                        <div class="row">
                            <div class="col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>First Name</label>
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>Last Name</label>
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>Citye</label>
                                    @Html.DropDownList("City", new SelectList(Enum.GetValues(typeof(City))), "Select city", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6 col-sm-6">
                                <div class="form-group">
                                    <label>Home Address</label>
                                    @Html.EditorFor(model => model.HomeAddress, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.HomeAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label>Gender</label>
                            @Html.DropDownList("Gender", new SelectList(Enum.GetValues(typeof(Gender))), "Select a gender", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>




                        <div class="text-center">
                            <button type="submit" class="btn btn-wd btn-info btn-round">Save</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    




    
}


