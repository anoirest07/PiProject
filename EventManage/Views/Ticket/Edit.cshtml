@model EventManage.Models.TicketViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Ticket", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TicketViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Prix, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Prix, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Prix, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="fileinput fileinput-new" data-provides="fileinput">
            <div class="fileinput-new ">
                @*recuperer l'image*@
                @{string path = "~/Content/Upload/" + @Html.DisplayFor(model => model.Logo);}
                @*enlever label for pour afficher seulement l'image*@
                <img src="@Url.Content(path)" width="120" height="120" />
            </div>
            <div class="fileinput-preview fileinput-exists img-no-padding"></div>
            <div class="fileinput-new img-no-padding">

                @Html.TextBox("Image", null, new { type = "file" })
                @*Html.EditorFor(model => model.ImageUrl, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Logo, "", new { @class = "text-danger" })


            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
